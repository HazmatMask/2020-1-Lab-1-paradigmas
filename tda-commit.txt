
#lang racket
(require "tda-file.rkt")
;TDA: COMMIT
;ESTRUCTURA BASE:
;  NOMBRE, FECHA, ARCHIVO, MENSAJE.
; (STRING, STRING, ARCHIVO, STRING)

;CONSTRUCTORES:

(define create_commit (lambda (C D F M) (list C D F M)))

;PERTENENCIA:

(define commit? (lambda (C)
                  (if (and
                       (string? (car C))
                       (string? (cadr C))
                       (string? (caddr C))
                       (string? (cadddr C))
                       (null? (cdddr C)))
                      #t
                      #f)))

;SELECTORES:

;SELECCIONAR CREADOR DEL COMMIT:
(define get_commit_creator (lambda (C) (car C)))

;SELECCIONAR FECHA DEL COMMIT:
(define get_commit_date (lambda (C) (cadr C)))

;SELECCIONAR ARCHIVO DEL COMMIT:
(define get_commit_file (lambda (C) (caddr C)))

;SELECCIONAR NOMBRE DEL ARCHIVO DEL COMMIT:

(define get_commit_filename (lambda (C) (get_filename (get_commit_file C))))

;SELECCIONAR CONTENIDO DEL ARCHIVO DEL COMMIT:

(define get_commit_content (lambda (C) (get_file_content (get_commit_file C))))

;SELECCIONAR MENSAJE ASOCIADO:

(define get_commit_message (lambda (C) (cadddr C)))

;MODIFICADORES:

;MODIFICAR MENSAJE DE COMMIT:

(define modify_commit_message (lambda (C MSG)
                                (create_commit
                                 (get_commit_creator C)
                                 (get_commit_date C)
                                 (get_commit_file C)
                                 MSG)))

(provide (all-defined-out))