#lang racket
(require "tda-commit.rkt")
;PULL+ADD

;DETERMINAR ARCHIVOS MODIFICADOS O NUEVOS

(define recursive_modified_commits (lambda (L1 L2 L3 LF)
                                     (if (null? L1)
                                         LF
                                         (if (null? L2)
                                             (recursive_modified_commits (cdr L1) L3 L3 (cons (car L1) LF))
                                             (if (equal? (car L1) (car L2))
                                                 (recursive_modified_commits (cdr L1) L3 L3 LF)
                                                 (if  (and (equal? (get_commit_filename (car L1)) (get_commit_filename (car L2)))
                                                           (not (equal? (get_commit_content (car L1)) (get_commit_content (car L2)))))
                                                      (recursive_modified_commits (cdr L1) L3 L3 (cons (car L1) LF))                                             
                                                      (recursive_modified_commits L1 (cdr L2) L3 LF)))))))

(define extract_modified_commits (lambda (L1 L2) (recursive_modified_commits L1 L2 L2 '())))

;ELIMINAR ELEMENTOS MODIFICADOS

(define recursive_delete_modified_commits (lambda (L1 L2 L3 LF)
                                            (if (null? L1)
                                                LF
                                                (if (null? L2)
                                                    (recursive_delete_modified_commits L1 L2 L3 (cons (car L1) LF))
                                                    (if  (equal? (get_commit_filename (car L1)) (get_commit_filename (car L2)))
                                                         (recursive_delete_modified_commits (cdr L1) L3 L3 LF)                                          
                                                         (recursive_delete_modified_commits L1 (cdr L2) L3 LF))))))

(define delete_modified_commits (lambda (L1 L2) (recursive_delete_modified_commits L1 L2 L2 '())))

;DETERMINAR ELEMENTOS UNICOS

(define recursive_unique_commits (lambda (L1 L2 L3)
                                 (if (null? L1)
                                     '()
                                     (if (null? L2)
                                         (cons (car L1) (recursive_unique_commits (cdr L1) L3 L3))
                                         (if (equal? (car L1) (car L2))
                                             (recursive_unique_commits (cdr L1) L3 L3)
                                             (recursive_unique_commits L1 (cdr L2) L3))))))

(define extract_unique_commits (lambda (L1 L2) (recursive_unique_commits L1 L2 L2)))


;MEZCLAR LISTAS

(define merge_lists_commits (lambda (L1 LC)
                              (if (null? (cdr LC))
                                  (cons (car LC) L1)
                                  (merge_lists_commits (cons (car LC) L1) (cdr LC)))))

(provide (all-defined-out))

;INTERNAL PULL